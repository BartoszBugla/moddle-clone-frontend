/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedDashboardImport } from './routes/_protected/dashboard'
import { Route as AuthLogoutImport } from './routes/_auth/logout'
import { Route as ProtectedCoursesIdImport } from './routes/_protected/courses/$id'

// Create Virtual Routes

const AuthSignUpLazyImport = createFileRoute('/_auth/sign-up')()
const AuthSignInLazyImport = createFileRoute('/_auth/sign-in')()
const ProtectedCoursesCreateLazyImport = createFileRoute(
  '/_protected/courses/create',
)()

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpLazyRoute = AuthSignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/sign-up.lazy').then((d) => d.Route))

const AuthSignInLazyRoute = AuthSignInLazyImport.update({
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/sign-in.lazy').then((d) => d.Route))

const ProtectedDashboardRoute = ProtectedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)

const ProtectedCoursesCreateLazyRoute = ProtectedCoursesCreateLazyImport.update(
  {
    path: '/courses/create',
    getParentRoute: () => ProtectedRoute,
  } as any,
).lazy(() =>
  import('./routes/_protected/courses/create.lazy').then((d) => d.Route),
)

const ProtectedCoursesIdRoute = ProtectedCoursesIdImport.update({
  path: '/courses/$id',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./routes/_protected/courses/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_auth/logout': {
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthImport
    }
    '/_protected/dashboard': {
      preLoaderRoute: typeof ProtectedDashboardImport
      parentRoute: typeof ProtectedImport
    }
    '/_auth/sign-in': {
      preLoaderRoute: typeof AuthSignInLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-up': {
      preLoaderRoute: typeof AuthSignUpLazyImport
      parentRoute: typeof AuthImport
    }
    '/_protected/courses/$id': {
      preLoaderRoute: typeof ProtectedCoursesIdImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/courses/create': {
      preLoaderRoute: typeof ProtectedCoursesCreateLazyImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([
    AuthLogoutRoute,
    AuthSignInLazyRoute,
    AuthSignUpLazyRoute,
  ]),
  ProtectedRoute.addChildren([
    ProtectedDashboardRoute,
    ProtectedCoursesIdRoute,
    ProtectedCoursesCreateLazyRoute,
  ]),
])

/* prettier-ignore-end */
